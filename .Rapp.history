require(PBSmapping)
.PBSfigs
.PBSfigs()
q
polyA2 <- data.frame(PID = rep(1, 4), POS = 1:4, X = c(0, 1, 1, 0), Y = c(0,    0, 1, 1))polyB2 <- data.frame(PID = rep(1, 4), POS = 1:4, X = c(0.5, 1.5, 1.5, 0.5),    Y = c(0.5, 0.5, 1.5, 1.5))print("Checking joinPolys with operation = 'INT'")if (is.null(joinPolys(polysA = polyA2, polysB = polyB2, operation = "INT")) ==    TRUE) {    print("Error: update PBSmapping or try different version (version 2.69.76 works)")} else {    print("All OK")}
print("Checking joinPolys with operation = 'UNION'")if (is.null(joinPolys(polysA = polyA2, polysB = polyB2, operation = "UNION")) ==TRUE) {    print("Error: update PBSmapping or try different version (version 2.69.76 works)")} else {    print("All OK")}
plot(polyA2)
source(tests.r)
source("tests.r")
source("tests.r")
source("Script.r")
source("script.r")
list.files()
source('~/Work/code/trawl_maps/FishingEffortMapping/Test data and code/Script.r', chdir = TRUE)
source('~/Work/code/trawl_maps/FishingEffortMapping/Test data and code/MDSPlots.r', chdir = TRUE)
load("/Users/samuelj/Work/code/trawl_maps/TrawlFisheries_not4B/QCS_synoptic_active_2013/Figures/bathyTop.RData")
source('~/Work/code/trawl_maps/FishingEffortMapping/Test data and code/Figures/yearlyStats.r', chdir = TRUE)
source('~/Work/code/trawl_maps/FishingEffortMapping/Test data and code/Figures/studyArea.r', chdir = TRUE)
source('~/Work/code/trawl_maps/FishingEffortMapping/Test data and code/Figures/studyArea.r', chdir = TRUE)
source("patternTypes.r")
priv = "no"
source("exposureMap.r")
priv = "yes"
pattPriv = "vessel"
source("exposureMap.r")
pattPriv = "event"
source("exposureMap.r")
source("/Users/samuelj/Work/code/trawl_maps/TrawlFisheries_not4B/HS_synoptic_active_2013/Figures/plotSweptArea.r")
source("/Users/samuelj/Work/code/trawl_maps/TrawlFisheries_not4B/HS_synoptic_active_2013/Figures/plotSweptArea.r")
source("/Users/samuelj/Work/code/trawl_maps/TrawlFisheries_not4B/HS_synoptic_active_2013/Figures/plotSweptArea.r")
source("/Users/samuelj/Work/code/trawl_maps/TrawlFisheries_not4B/HS_synoptic_active_2013/Figures/plotSweptArea.r")
hist1$counts
hist1
overlaps
diff1
threshold
as.character(c(1,2,3,4))
df <- data.frame()
df
colnames(df)
hist1
Q
?save
head(trawlGrid)
nrow(trawlGrid)/4
total_area = (max(trawlGrid$Y) - min(trawlGrid$Y))*(max(trawlGrid$X) - min(trawlGrid$X))
total_area
head(MDSmat)
nrow(MDSmat)
total_area
source("/Users/samuelj/Work/code/trawl_maps/TrawlFisheries_not4B/HS_synoptic_active_2013/Figures/plotSweptArea.r")
source("/Users/samuelj/Work/code/trawl_maps/TrawlFisheries_not4B/HS_synoptic_active_2013/Figures/plotSweptArea.r")
source("/Users/samuelj/Work/code/trawl_maps/TrawlFisheries_not4B/HS_synoptic_active_2013/Figures/plotSweptArea.r")
source("/Users/samuelj/Work/code/trawl_maps/TrawlFisheries_not4B/HS_synoptic_active_2013/Figures/plotSweptArea.r")
source("/Users/samuelj/Work/code/trawl_maps/TrawlFisheries_not4B/HS_synoptic_active_2013/Figures/plotSweptArea.r")
source("/Users/samuelj/Work/code/trawl_maps/TrawlFisheries_not4B/WCVI_synoptic_active_2013/Figures/plotSweptArea.r")
source("/Users/samuelj/Work/code/trawl_maps/TrawlFisheries_not4B/WCVI_synoptic_active_2013/Figures/plotSweptArea.r")
rm (list = ls())
load("/Users/samuelj/Work/code/trawl_maps/TrawlFisheries_not4B/HS_synoptic_active_2013/histData.RData")
ls()
h0.1000
h0.1000$hist
plot(h0.1000$hist)
h0.1000$overlaps
sum(h0.1000$overlaps)
total_area
ls()
h0.1000
str(h0.1000)
h0.1000$overlaps > h0.1000$threshold
sum(h0.1000$overlaps > h0.1000$threshold)
str(h0.1000)
load("/Users/samuelj/Work/code/trawl_maps/HistData/histDataHS.RData")
df <- data.frame (  depRange, pcRegion, pcTrawled,#
                      "[0,0.25)", "[0.25,0.5)", "[0.5,0.75)", "[0.75,1),"#
                      "[1,inf)" )
df <- data.frame ( NA, nrow = 3, ncol = 8 )
df
?data.frame
df <- matrix ( NA, nrow = 3, ncol = 8 )
df
df <- as.data.frame(df)
df
names(df)
names(df) <- c("depRange", "pcRegion", "pcTrawled",#
                      "[0,0.25)", "[0.25,0.5)", "[0.5,0.75)", "[0.75,1)",#
                      "[1,inf)" ) #
}
df
ls()
df$depRan <- c("0-1000", "0-200", "200-1000")
df
str(h0.1000)
areas   <- c("HS", "QCS", "WCHG", "WCVI" )#
outDFs  <- list()#
#
# Loop over areas and create a data frame#
for ( a in areas )#
{#
  # Load areas#
  load ( paste( "histData", a, ".RData", sep = "" ) )#
  histList <- list()#
  histList[[1]] <- h0.1000#
  histList[[2]] <- h0.200#
  histList[[3]] <- h200.1000#
#
  df <- matrix ( NA, nrow = 3, ncol = 8 )#
  df <- as.data.frame(df)#
  names(df) <- c("depRange", "pcRegion", "pcTrawled",#
                      "[0,0.25)", "[0.25,0.5)", "[0.5,0.75)", "[0.75,1)",#
                      "[1,inf)" ) #
#
  df$depRange <- c("[0,1000]", "[0,200]", "[200,1000]")#
#
  for ( j  in 1:3)#
  {#
    df$pcRegion   <- histList[[j]]$pcRegion#
    df$pcTrawled  <- histList[[j]]$pcTrawled#
    df[j,4:7]     <- histList[[j]]$histogram$counts * 1000#
    df[j,8]       <- sum ( histList[[j]]$overlaps > histList[[j]]$threshold )#
  }#
  outDFs $ areas[a] <- df#
}
source("/Users/samuelj/Work/code/trawl_maps/HistData/histExtract.R")
source("/Users/samuelj/Work/code/trawl_maps/HistData/histExtract.R")
outDFs $ as.symbol(areas[a]) <- df
quote(areas[a])
eval(quote(areas[a]))
a
outDFs $ a <- df
outDFs
eval(a)
outDFs $ eval(a) <- df
source("/Users/samuelj/Work/code/trawl_maps/HistData/histExtract.R")
Q
source("/Users/samuelj/Work/code/trawl_maps/HistData/histExtract.R")
c
c
c
c
outDFs
a <- 1
load ( paste( "histData", areas[a], ".RData", sep = "" ) )
ls()
h0.1000
str(h0.1000)
outDFs
source("/Users/samuelj/Work/code/trawl_maps/HistData/histExtract.R")
c
c
c
c
outDFs
save(list = c("outDFs"), file = "histDataSumm.RData" )
source("mser.r")
source("mser.r")
runMSE()
runMSE()
traceback()
.getTrackingData
file_ext
?file_ext

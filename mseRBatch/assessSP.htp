#if !defined(_assessSP_)
#  define _assessSP_

class model_data : public ad_comm{
  data_int nyrs;
  data_int nIndices;
  data_int nProjYrs;
  data_int trendYrs;
  data_int rSeed;
  data_int ruleType;
  data_int nQlevels;
  data_vector Qlevel;
  data_vector initKatch;
  dvector katch;
  data_vector indexType;
  data_ivector fYear;
  data_ivector lYear;
  ivector nobs;
  ivector validObs;
  data_matrix Indices;
  ~model_data();
  model_data(int argc,char * argv[]);
  friend class model_parameters;
};

class model_parameters : public model_data ,
  public function_minimizer
{
public:
  ~model_parameters();
  void preliminary_calculations(void);
  void set_runtime(void);
  virtual void * mycast(void) {return (void*)this;}
  static int mc_phase(void)
  {
    return initial_params::mc_phase;
  }
  static int mceval_phase(void)
  {
    return initial_params::mceval_phase;
  }
  static int sd_phase(void)
  {
    return initial_params::sd_phase;
  }
  static int current_phase(void)
  {
    return initial_params::current_phase;
  }
  static int last_phase(void)
  {
    return (initial_params::current_phase
      >=initial_params::max_number_phases);
  }
  static prevariable current_feval(void)
  {
    return *objective_function_value::pobjfun;
  }
private:
  ivector integer_control_flags;
  dvector double_control_flags;
  param_number prior_function_value;
  param_number likelihood_function_value;
  objective_function_value f;
  param_init_number lnMsy;
  param_init_number lnFmsy;
  param_init_number pmMsy;
  param_init_number psdMsy;
  param_init_number pmFmsy;
  param_init_number psdFmsy;
  param_init_number rho;
  param_init_bounded_dev_vector lnOmega;
  param_number MSY;
  param_stddev_number Fmsy;
  param_stddev_number Bmsy;
  param_stddev_number projExpBio;
  param_number initDepEst;
  param_vector biomass;
  param_number depletion;
  param_number avgF;
  param_matrix scaledIndices;
  param_vector lnq;
  param_vector ss;
  param_number SSg;
  param_number SSw;
  param_number kappaSq;
  param_matrix z;
  param_number prior;
  param_number zSum;
  param_number like;
  param_number bpen;
  param_number fpen;
  param_number pos_pen;
  param_number dep_pen;
  param_number neval;
public:
  virtual void userfunction(void);
  virtual void report(void);
  virtual void final_calcs(void);
  model_parameters(int sz,int argc, char * argv[]);
  virtual void initializationfunction(void){}
  void pMod(void);
  void projPMod12(void);
  void projPMod3(void);
  void calcLikelihood(void);
  void calcPrior(void);

};
#endif

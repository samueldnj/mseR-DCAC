#if !defined(_refptsDD_)
#  define _refptsDD_

class model_data : public ad_comm{
  init_adstring dataFileName;
  data_int nAges;
  data_number B0;
  data_number R0;
  data_number rSteepness;
  data_number rec_a;
  data_number rec_b;
  data_number M;
  data_number alpha_g;
  data_number rho_g;
  data_number wk;
  ~model_data();
  model_data(int argc,char * argv[]);
  friend class model_parameters;
};

class model_parameters : public model_data ,
  public function_minimizer
{
public:
  ~model_parameters();
  void preliminary_calculations(void);
  void set_runtime(void);
  virtual void * mycast(void) {return (void*)this;}
  static int mc_phase(void)
  {
    return initial_params::mc_phase;
  }
  static int mceval_phase(void)
  {
    return initial_params::mceval_phase;
  }
  static int sd_phase(void)
  {
    return initial_params::sd_phase;
  }
  static int current_phase(void)
  {
    return initial_params::current_phase;
  }
  static int last_phase(void)
  {
    return (initial_params::current_phase
      >=initial_params::max_number_phases);
  }
private:
  ivector integer_control_flags;
  dvector double_control_flags;
  param_init_bounded_number FMSY;
  objective_function_value logY;
  param_number Rstar;
  param_number phiY;
  param_number phiS;
  param_number BMSY;
  param_number MSY;
  param_number se;
  param_number be;
  param_number we;
public:
  virtual void userfunction(void);
  virtual void report(void);
  virtual void final_calcs(void);
  model_parameters(int sz,int argc, char * argv[]);
  virtual void initializationfunction(void){}
  void calcYield(void);

};
#endif
